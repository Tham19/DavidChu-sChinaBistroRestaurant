<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">


    <context:property-placeholder location="classpath:application.properties"/>
    <context:component-scan base-package="LoginHandle"/>
    <http use-expressions="true" auto-config="false">

        <intercept-url pattern="/login" access="permitAll()"/>
        <intercept-url pattern="/home" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/admin/update**" access="hasRole('ROLE_ADMIN')"/>

        <csrf disabled="true"/>

        <form-login login-page='/login' login-processing-url="/j_spring_security_check"
                    username-parameter="username" password-parameter="password"
                    authentication-success-handler-ref="loginSuccessHandler"
                    authentication-failure-handler-ref="loginFailureHandler"/>

        <logout logout-success-url="/login?logout"></logout>


        <logout delete-cookies="JSESSIONID"/>

        <remember-me remember-me-parameter="remember-me-param"
                     remember-me-cookie="my-remember-me"
                     token-validity-seconds="1209600"
                     token-repository-ref="jdbcTokenRepository"/>
    </http>

    <!-- Uses a database table to maintain a set of persistent login data -->
    <beans:bean id="jdbcTokenRepository"
                class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>

    <beans:bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value= "${driver}"/>
        <beans:property name="url" value="${url}"/>
        <beans:property name="username" value="${username}"/>
        <beans:property name="password" value="${password}"/>
    </beans:bean>


    <beans:bean id="encoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="10"/>
    </beans:bean>

    <authentication-manager>
        <authentication-provider user-service-ref="UserServiceImpl">
            <password-encoder ref="encoder"/>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="UserServiceImpl" class="SecurityService.SecurityServiceImpl">
    </beans:bean>

    <beans:bean id="loginSuccessHandler" class="LoginHandle.LoginSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/home"></beans:property>
    </beans:bean>

    <beans:bean id="loginFailureHandler" class="LoginHandle.LoginFailureHandler">
        <beans:property name="defaultFailureUrl" value="/login?error"/>
    </beans:bean>


</beans:beans>
